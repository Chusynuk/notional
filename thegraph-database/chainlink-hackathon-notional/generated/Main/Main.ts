// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class EscrowClosed extends ethereum.Event {
  get params(): EscrowClosed__Params {
    return new EscrowClosed__Params(this);
  }
}

export class EscrowClosed__Params {
  _event: EscrowClosed;

  constructor(event: EscrowClosed) {
    this._event = event;
  }

  get escrowContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get issueId(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class EscrowClosedAfterApprove extends ethereum.Event {
  get params(): EscrowClosedAfterApprove__Params {
    return new EscrowClosedAfterApprove__Params(this);
  }
}

export class EscrowClosedAfterApprove__Params {
  _event: EscrowClosedAfterApprove;

  constructor(event: EscrowClosedAfterApprove) {
    this._event = event;
  }

  get escrowContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get issueId(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class EscrowCreated extends ethereum.Event {
  get params(): EscrowCreated__Params {
    return new EscrowCreated__Params(this);
  }
}

export class EscrowCreated__Params {
  _event: EscrowCreated;

  constructor(event: EscrowCreated) {
    this._event = event;
  }

  get escrowContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get arbiter(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get depositor(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get ownerUserName(): string {
    return this._event.parameters[4].value.toString();
  }

  get issueId(): string {
    return this._event.parameters[5].value.toString();
  }

  get repo(): string {
    return this._event.parameters[6].value.toString();
  }

  get url(): string {
    return this._event.parameters[7].value.toString();
  }
}

export class NewDeveloper extends ethereum.Event {
  get params(): NewDeveloper__Params {
    return new NewDeveloper__Params(this);
  }
}

export class NewDeveloper__Params {
  _event: NewDeveloper;

  constructor(event: NewDeveloper) {
    this._event = event;
  }

  get developer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get loginName(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class Main__DevelopersResult {
  value0: Address;
  value1: string;

  constructor(value0: Address, value1: string) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    return map;
  }

  getDeveloperAddress(): Address {
    return this.value0;
  }

  getLoginName(): string {
    return this.value1;
  }
}

export class Main__EscrowsResult {
  value0: Address;
  value1: string;
  value2: string;
  value3: string;
  value4: string;

  constructor(
    value0: Address,
    value1: string,
    value2: string,
    value3: string,
    value4: string
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    map.set("value4", ethereum.Value.fromString(this.value4));
    return map;
  }

  getEscrowContract(): Address {
    return this.value0;
  }

  getOwnerUserName(): string {
    return this.value1;
  }

  getIssueId(): string {
    return this.value2;
  }

  getRepo(): string {
    return this.value3;
  }

  getUrl(): string {
    return this.value4;
  }
}

export class Main__getDevelopersResultValue0Struct extends ethereum.Tuple {
  get developerAddress(): Address {
    return this[0].toAddress();
  }

  get loginName(): string {
    return this[1].toString();
  }
}

export class Main__getEscrowsResultValue0Struct extends ethereum.Tuple {
  get escrowContract(): Address {
    return this[0].toAddress();
  }

  get ownerUserName(): string {
    return this[1].toString();
  }

  get issueId(): string {
    return this[2].toString();
  }

  get repo(): string {
    return this[3].toString();
  }

  get url(): string {
    return this[4].toString();
  }
}

export class Main extends ethereum.SmartContract {
  static bind(address: Address): Main {
    return new Main("Main", address);
  }

  ApproveEscrow(escrowContractAddress: Address, beneficiary: Address): BigInt {
    let result = super.call(
      "ApproveEscrow",
      "ApproveEscrow(address,address):(uint256)",
      [
        ethereum.Value.fromAddress(escrowContractAddress),
        ethereum.Value.fromAddress(beneficiary)
      ]
    );

    return result[0].toBigInt();
  }

  try_ApproveEscrow(
    escrowContractAddress: Address,
    beneficiary: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "ApproveEscrow",
      "ApproveEscrow(address,address):(uint256)",
      [
        ethereum.Value.fromAddress(escrowContractAddress),
        ethereum.Value.fromAddress(beneficiary)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  Developers(param0: BigInt): Main__DevelopersResult {
    let result = super.call(
      "Developers",
      "Developers(uint256):(address,string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new Main__DevelopersResult(
      result[0].toAddress(),
      result[1].toString()
    );
  }

  try_Developers(param0: BigInt): ethereum.CallResult<Main__DevelopersResult> {
    let result = super.tryCall(
      "Developers",
      "Developers(uint256):(address,string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Main__DevelopersResult(value[0].toAddress(), value[1].toString())
    );
  }

  EscrowExists(param0: Address): boolean {
    let result = super.call("EscrowExists", "EscrowExists(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try_EscrowExists(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("EscrowExists", "EscrowExists(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  Escrows(param0: BigInt): Main__EscrowsResult {
    let result = super.call(
      "Escrows",
      "Escrows(uint256):(address,string,string,string,string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new Main__EscrowsResult(
      result[0].toAddress(),
      result[1].toString(),
      result[2].toString(),
      result[3].toString(),
      result[4].toString()
    );
  }

  try_Escrows(param0: BigInt): ethereum.CallResult<Main__EscrowsResult> {
    let result = super.tryCall(
      "Escrows",
      "Escrows(uint256):(address,string,string,string,string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Main__EscrowsResult(
        value[0].toAddress(),
        value[1].toString(),
        value[2].toString(),
        value[3].toString(),
        value[4].toString()
      )
    );
  }

  EscrowsIsEmpty(): boolean {
    let result = super.call("EscrowsIsEmpty", "EscrowsIsEmpty():(bool)", []);

    return result[0].toBoolean();
  }

  try_EscrowsIsEmpty(): ethereum.CallResult<boolean> {
    let result = super.tryCall("EscrowsIsEmpty", "EscrowsIsEmpty():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  consumerAddress(): Address {
    let result = super.call(
      "consumerAddress",
      "consumerAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_consumerAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "consumerAddress",
      "consumerAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  deleteEscrowArray(escrowContractAddress: Address): BigInt {
    let result = super.call(
      "deleteEscrowArray",
      "deleteEscrowArray(address):(uint256)",
      [ethereum.Value.fromAddress(escrowContractAddress)]
    );

    return result[0].toBigInt();
  }

  try_deleteEscrowArray(
    escrowContractAddress: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "deleteEscrowArray",
      "deleteEscrowArray(address):(uint256)",
      [ethereum.Value.fromAddress(escrowContractAddress)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  escrowInitialized(): Address {
    let result = super.call(
      "escrowInitialized",
      "escrowInitialized():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_escrowInitialized(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "escrowInitialized",
      "escrowInitialized():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getDevelopers(): Array<Main__getDevelopersResultValue0Struct> {
    let result = super.call(
      "getDevelopers",
      "getDevelopers():((address,string)[])",
      []
    );

    return result[0].toTupleArray<Main__getDevelopersResultValue0Struct>();
  }

  try_getDevelopers(): ethereum.CallResult<
    Array<Main__getDevelopersResultValue0Struct>
  > {
    let result = super.tryCall(
      "getDevelopers",
      "getDevelopers():((address,string)[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Main__getDevelopersResultValue0Struct>()
    );
  }

  getEscrows(): Array<Main__getEscrowsResultValue0Struct> {
    let result = super.call(
      "getEscrows",
      "getEscrows():((address,string,string,string,string)[])",
      []
    );

    return result[0].toTupleArray<Main__getEscrowsResultValue0Struct>();
  }

  try_getEscrows(): ethereum.CallResult<
    Array<Main__getEscrowsResultValue0Struct>
  > {
    let result = super.tryCall(
      "getEscrows",
      "getEscrows():((address,string,string,string,string)[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Main__getEscrowsResultValue0Struct>()
    );
  }

  isEscrow(_contractAddress: Address): boolean {
    let result = super.call("isEscrow", "isEscrow(address):(bool)", [
      ethereum.Value.fromAddress(_contractAddress)
    ]);

    return result[0].toBoolean();
  }

  try_isEscrow(_contractAddress: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isEscrow", "isEscrow(address):(bool)", [
      ethereum.Value.fromAddress(_contractAddress)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get escrowContractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ApproveEscrowCall extends ethereum.Call {
  get inputs(): ApproveEscrowCall__Inputs {
    return new ApproveEscrowCall__Inputs(this);
  }

  get outputs(): ApproveEscrowCall__Outputs {
    return new ApproveEscrowCall__Outputs(this);
  }
}

export class ApproveEscrowCall__Inputs {
  _call: ApproveEscrowCall;

  constructor(call: ApproveEscrowCall) {
    this._call = call;
  }

  get escrowContractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get beneficiary(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ApproveEscrowCall__Outputs {
  _call: ApproveEscrowCall;

  constructor(call: ApproveEscrowCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class AddDeveloperCall extends ethereum.Call {
  get inputs(): AddDeveloperCall__Inputs {
    return new AddDeveloperCall__Inputs(this);
  }

  get outputs(): AddDeveloperCall__Outputs {
    return new AddDeveloperCall__Outputs(this);
  }
}

export class AddDeveloperCall__Inputs {
  _call: AddDeveloperCall;

  constructor(call: AddDeveloperCall) {
    this._call = call;
  }

  get _developer(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _loginName(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class AddDeveloperCall__Outputs {
  _call: AddDeveloperCall;

  constructor(call: AddDeveloperCall) {
    this._call = call;
  }
}

export class CreateEscrowCall extends ethereum.Call {
  get inputs(): CreateEscrowCall__Inputs {
    return new CreateEscrowCall__Inputs(this);
  }

  get outputs(): CreateEscrowCall__Outputs {
    return new CreateEscrowCall__Outputs(this);
  }
}

export class CreateEscrowCall__Inputs {
  _call: CreateEscrowCall;

  constructor(call: CreateEscrowCall) {
    this._call = call;
  }

  get _arbiter(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _ownerUserName(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _issueId(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _repo(): string {
    return this._call.inputValues[3].value.toString();
  }

  get _url(): string {
    return this._call.inputValues[4].value.toString();
  }
}

export class CreateEscrowCall__Outputs {
  _call: CreateEscrowCall;

  constructor(call: CreateEscrowCall) {
    this._call = call;
  }
}

export class CreateEscrowPresetCall extends ethereum.Call {
  get inputs(): CreateEscrowPresetCall__Inputs {
    return new CreateEscrowPresetCall__Inputs(this);
  }

  get outputs(): CreateEscrowPresetCall__Outputs {
    return new CreateEscrowPresetCall__Outputs(this);
  }
}

export class CreateEscrowPresetCall__Inputs {
  _call: CreateEscrowPresetCall;

  constructor(call: CreateEscrowPresetCall) {
    this._call = call;
  }
}

export class CreateEscrowPresetCall__Outputs {
  _call: CreateEscrowPresetCall;

  constructor(call: CreateEscrowPresetCall) {
    this._call = call;
  }
}

export class DeleteEscrowArrayCall extends ethereum.Call {
  get inputs(): DeleteEscrowArrayCall__Inputs {
    return new DeleteEscrowArrayCall__Inputs(this);
  }

  get outputs(): DeleteEscrowArrayCall__Outputs {
    return new DeleteEscrowArrayCall__Outputs(this);
  }
}

export class DeleteEscrowArrayCall__Inputs {
  _call: DeleteEscrowArrayCall;

  constructor(call: DeleteEscrowArrayCall) {
    this._call = call;
  }

  get escrowContractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class DeleteEscrowArrayCall__Outputs {
  _call: DeleteEscrowArrayCall;

  constructor(call: DeleteEscrowArrayCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class SetConsumerAddressCall extends ethereum.Call {
  get inputs(): SetConsumerAddressCall__Inputs {
    return new SetConsumerAddressCall__Inputs(this);
  }

  get outputs(): SetConsumerAddressCall__Outputs {
    return new SetConsumerAddressCall__Outputs(this);
  }
}

export class SetConsumerAddressCall__Inputs {
  _call: SetConsumerAddressCall;

  constructor(call: SetConsumerAddressCall) {
    this._call = call;
  }

  get _consumerAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetConsumerAddressCall__Outputs {
  _call: SetConsumerAddressCall;

  constructor(call: SetConsumerAddressCall) {
    this._call = call;
  }
}
